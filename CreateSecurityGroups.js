/**
 * Created by ttjornhom on 2/20/18.
 */

var count = new GlideAggregate('sys_user_group_type');
count.addQuery('name', '=', 'Security');
count.addAggregate('count');
count.query();
var result = 0;
if (count.next())
    result = count.getAggregate('COUNT');
gs.print('Result: ' + result);

if (result == 0){

    var gr = new GlideRecord('sys_user_group_type');
    gr.initialize();
    gr.name =  'Security' ;
    gr.description = 'Groups Type is generated by Script to track Groups used for Security purposes only';
    gr.can_delegate = false;
    gr.elevated_privilege = false;
    gr.grantable = false;
    gr.insert();

}

// Create all the Security Groups   name!=ITIL

var queryString = "name!=ITIL";  // Give me all menus execpt for Adminstrator
var gr = new GlideRecord('sys_user_set');
gr.addEncodedQuery(queryString);
gr.query();
while (gr.next()) {
        gs.print(gr.name);
        gs.print(gr.groups);

    var gruser = new GlideRecord('sys_user_group');
    gruser.initialize();
    gruser.name = gr.name;
    gruser.description = 'Security User Group based off of User Sets. This is used to keep track of Menu Items';
    gruser.type = 'Security';
    //gruser.groups = gr.groups;
    var parentGroupid = gruser.insert();

// loop thru security Groups and assign Roles and Groups
     var childGroups, i , fLEn;



    childGroups =  gr.groups;
    fLen = childGroups.length;

    for (i = 0; i < fLen; i++) {
        gs.print(childGroups[i]);

        // update child Groups
        /*
        var gr = new GlideRecord('sys_user_group');
        gr.addQuery('sys_id','=', childGroups);
        gr.query();
        while (gr.next()) {
            gr.parent = parentGroupid;
            gr.update();
       */

        }
    }
}









